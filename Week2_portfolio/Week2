# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load your dataset using an absolute path
# Replace this path with the actual path to your CSV file
file_path = 'C:/Sudhish_Folders/SwinburneUNI/Studio_Portfolios/venv/Include/Portfolio_Submissions/water_potability.csv'

try:
    data = pd.read_csv(file_path)
    print("File loaded successfully!")
except FileNotFoundError:
    print(f"Error: The file was not found at the specified path: {file_path}")
    # You might want to stop the script if the file isn't found
    exit()

# Display the first and last few rows of the dataset
print("\nDataset Overview:")
print(data.head())
print(data.tail())

# Check data types and missing values
print("\nData Types and Missing Values:")
print(data.dtypes)
print(data.isnull().sum())

# Summary statistics for numerical features
print("\nSummary Statistics:")
print(data.describe())

# Plot histograms for numerical features
data.hist(bins=20, figsize=(15, 10))
plt.suptitle("Histograms of Numerical Features")
plt.show()

# Calculate and visualize the correlation matrix
correlation_matrix = data.corr()
print("\nCorrelation Matrix:")
print(correlation_matrix)

plt.figure(figsize=(12, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Correlation Matrix Heatmap")
plt.show()

# Scatter plots for selected pairs of features
# Example: Assuming your dataset has 'feature1', 'feature2', and 'strength'
plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='feature1', y='strength')
plt.title("Scatter Plot: Feature1 vs. Strength")
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(data=data, x='feature2', y='strength')
plt.title("Scatter Plot: Feature2 vs. Strength")
plt.show()

# Box plots to analyze relationships between features and target variable
plt.figure(figsize=(10, 6))
sns.boxplot(data=data, x='feature1', y='strength')
plt.title("Box Plot: Feature1 vs. Strength")
plt.show()

# Outlier detection using box plots
plt.figure(figsize=(10, 6))
sns.boxplot(data=data['feature1'])
plt.title("Box Plot: Feature1 Content Outliers")
plt.show()

# Observations based on the EDA findings
print("\nObservations:")
print("1. Feature1 shows a strong positive correlation with strength.")
print("2. Feature2 is moderately negatively correlated with strength.")
print("3. Some outliers are present in feature1.")

# Considerations for modeling
print("\nConsiderations for Modeling:")
print("Consider engineering new features, such as feature1-feature2 ratio.")
